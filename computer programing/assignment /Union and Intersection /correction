#include <stdio.h>
#define MAX_STUDENTS 1000

void input_array_a(int a[], int num_a) {
    /* Take input of scores into <a> for <n> students */
    for(int i = 0; i < num_a; i++) {
        scanf("%d", &a[i]);
    }
}

void input_array_b(int b[], int num_b) {
    for(int i = 0; i < num_b; i++) {
        scanf("%d", &b[i]);
    }
}

void bubble_sort(int arr[], int size) {
    for(int i = 0; i < size - 1; i++) {
        for(int j = 0; j < size - 1 - i; j++) {
            if(arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

void print_set(int arr[], int size) {
    /* Sort the array before printing */
    bubble_sort(arr, size);
    
    /* Print the elements of the array */
    printf("{");
    for(int i = 0; i < size; i++) {
        printf("%d", arr[i]);
        if(i < size - 1) {
            printf(",");
        }
    }
    printf("}");
}

int uni(int a[], int b[], int num_a, int num_b, int result[]) {
    /* Calculate the union of arrays a and b */
    int result_size = 0;

    // Copy elements from a to result
    for(int i = 0; i < num_a; i++) {
        result[result_size++] = a[i];
    }

    // Copy elements from b to result
    for(int i = 0; i < num_b; i++) {
        result[result_size++] = b[i];
    }

    // Sort result array
    bubble_sort(result, result_size);

    // Remove duplicates
    int unique_size = 0;
    int unique_result[MAX_STUDENTS * 2] = {0};
    for(int i = 0; i < result_size; i++) {
        if(i == 0 || result[i] != result[i-1]) {
            unique_result[unique_size++] = result[i];
        }
    }

    // Copy unique_result back to result
    for(int i = 0; i < unique_size; i++) {
        result[i] = unique_result[i];
    }

    return unique_size;
}

int inter(int a[], int b[], int num_a, int num_b, int result[]) {
    /* Calculate the intersection of arrays a and b */
    int result_size = 0;

    for(int i = 0; i < num_a; i++) {
        for(int j = 0; j < num_b; j++) {
            if(a[i] == b[j]) {
                int found = 0;
                for(int k = 0; k < result_size; k++) {
                    if(a[i] == result[k]) {
                        found = 1;
                        break;
                    }
                }
                if(!found) {
                    result[result_size++] = a[i];
                }
                break;
            }
        }
    }

    return result_size;
}

int main() {
    int arr[MAX_STUDENTS] = {0};
    int brr[MAX_STUDENTS] = {0};
    int result_union[MAX_STUDENTS * 2] = {0};
    int result_inter[MAX_STUDENTS] = {0};
    int num_a, num_b;
    
    scanf("%d", &num_a);
    input_array_a(arr, num_a);
    scanf("%d", &num_b);
    input_array_b(brr, num_b);
    
    int union_size = uni(arr, brr, num_a, num_b, result_union);
    int inter_size = inter(arr, brr, num_a, num_b, result_inter);

    printf("union: ");
    print_set(result_union, union_size);
    printf("\nintersection: ");
    print_set(result_inter, inter_size);
    printf("\n");

    return 0;
}
