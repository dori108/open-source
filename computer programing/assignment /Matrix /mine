#include <stdio.h>
#define MAX 10

void input_matrix(int m[][MAX], int r, int c){
	for(int i=0; i<r; i++){
		for(int j=0; j<c; j++){
			scanf("%d", &m[i][j]);
		}
	}
}

void print_matrix(int m[][MAX], int r, int c){
	for(int i=0; i<r; i++){
		for(int j=0; j<c; j++){
			printf("%d\t", m[i][j]);
		}
		printf("\n");
	}
}

void add(int m1[][MAX], int m2[][MAX], int r1, int c1, int r2, int c2){
	int res[MAX][MAX]; // result matrix
	int r, c; // rows and columns of the resultant matrix
	
	for(int i; i<r; i++){
		for(int j; j<c; j++){
			r = r1; 
			c = c1;
			res[i][j] = m1[i][j];
		}
	}
	
	for(int i; i<r; i++){
		for(int j; j<c; j++){
			r = r2; 
			c = c2;
			res[i][j] += m2[i][j];
		}
	}
	print_matrix(res, r, c);
	
}

void multiply(int m1[][MAX], int m2[][MAX], int r1, int c1, int r2, int c2){
	int res[MAX][MAX];
	int r,c,sum[MAX][MAX];
	
	for(int i; i<r; i++){
		for(int j; j<c; j++){
			r = r1; 
			c = c1;
			res[i][j] = m1[i][j];
		}
	}
	for(int i; i<r; i++){
		for(int j; j<c; j++){
			r = r2; 
			c = c2;
			res[i][j] *= m2[i][j];
			
			for(int k; k<c1; k++){
				sum[r][k]+= res[i][j];
			}
		
		}
	}
	print_matrix(sum, r, c);
}

void transpose(int m1[][MAX], int r1, int c1){
	int res[MAX][MAX];
	int r, c;
	r = r1;
	c = c1; 
	for (int i=0; i<r; i++){
		for (int j=0; j<c; j++){
			res[i][j]=m1[j][i];
		}
	}
	print_matrix(res, r, c);
}

int main() {
	int r1, c1, r2, c2;
	int M1[MAX][MAX], M2[MAX][MAX];
	char operation[MAX];
	
	scanf("%d %d", &r1, &c1); // input: rows and columns of the first matrix
	input_matrix(M1, r1, c1); // input: elements of the first matrix 
	
	scanf("%d %d", &r2, &c2); // input: rows and columns of the second matrix
	input_matrix(M2, r2, c2); // input: elements of the second matrix

	scanf("%s", operation); // input: operation e.g., "add", "mult"

	if (strcmp(operation, "add")==0){
		if (r1 != r1 || c1 != c2) return 1;
		add(M1, M2, r1, c1, r2, c2);
	}
	else if (strcmp(operation, "mult")==0){
		if (c1 != r2) return 1;
		multiply(M1, M2, r1, c1, r2, c2);
	}
	else if (strcmp(operation, "trans")==0){
		transpose(M1, r1, c1);
	}
	else {
		printf("invalid operation\n"); return 1;
	}
	return 0;
}

error 시간 초과과
