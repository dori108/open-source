Day 1: Git의 기본 개념과 설치
1.1 버전 관리의 기본

버전 관리 시스템(VCS)의 주요 기능은 무엇인가요? 변경사항들을 저장하는 것이다. 협업이 용이하게하고 이전 변경사항들의 확인을 쉽게 만들어준다. 각각의 버전들을 개별적으로 관리하여 작업이 용이하게 한다.
분산 버전 관리 시스템(DVCS)와 중앙집중식 버전 관리 시스템(CVCS)의 차이점은 무엇인가요? 모름
1.2 Git의 작동 원리
3. Git에서 커밋된 파일은 어떤 상태로 간주되나요? 스테이징 상태 
4. Git에서 파일의 상태를 나타내는 세 가지 주요 상태는 무엇인가요? 스테이징 / 언 스테이징 / 커밋

1.3 Git 설치 및 설정 방법
5. Git을 설치한 후 사용자 이름을 설정하는 명령어는 무엇인가요? git config --user name
6. Git 설치 후 사용자 이메일을 설정하는 명령어는 무엇인가요? git config --user email
7. Git 설정을 확인하는 명령어는 무엇인가요? git status
8. Git 버전을 확인하는 명령어는 무엇인가요? git --version

Day 2: 저장소 생성 및 파일 상태 확인
2.1 저장소 생성
9. 새로운 Git 저장소를 생성하는 명령어는 무엇인가요? git init
10. Git 저장소를 초기화하면 어떤 디렉터리가 생성되나요? .git

2.2 파일 상태 확인
11. 현재 파일의 상태를 확인하는 명령어는 무엇인가요? git 
12. git status 명령어를 실행했을 때 확인할 수 있는 정보는 무엇인가요? 현재 작업 디렉토리의 변경사항, 파일 상태 정보(추적되지 않은 파일, 수정된 파일, 스테이징된 파일 등)

Day 3: 파일 추가 및 커밋
2.3 파일 추가 및 커밋
13. 파일을 스테이징 영역에 추가하는 명령어는 무엇인가요? git add 파일 명 -m""
14. 모든 변경된 파일을 스테이징 영역에 추가하는 명령어는 무엇인가요? git add. 
15. 스테이징된 파일을 커밋하는 명령어는 무엇인가요? git commit 파일 명
16. 커밋 메시지는 왜 중요한가요? 어떤 것을 변경했는지 알아야하기 때문이다. 협업할 때 중요한 정보가 되기 때문이다. 남의 코드를 잘 보기란 쉽지 않음
17. 커밋 히스토리를 조회하는 명령어는 무엇인가요? git log

퀴즈 답안

버전 관리 시스템(VCS)의 주요 기능은 파일의 변경 이력을 기록하고, 특정 버전으로 되돌아갈 수 있게 해주는 것입니다.
**분산 버전 관리 시스템(DVCS)**는 모든 참여자가 프로젝트의 전체 히스토리를 로컬에 저장하고 독립적으로 작업할 수 있으며, **중앙집중식 버전 관리 시스템(CVCS)**는 중앙 서버에 모든 히스토리를 저장하고 중앙 서버에 의존합니다.
Committed 상태로 간주됩니다.
Committed, Modified, Staged 상태입니다.

git config --global user.name "Your Name"

git config --global user.email "your.email@example.com"

git config --list

git --version

git init
.git 디렉터리가 생성됩니다.

git status
새로운 파일, 수정된 파일, 스테이징된 파일 등의 정보를 확인할 수 있습니다.

git add filename

git add .

git commit -m "커밋 메시지"
커밋 메시지는 변경 사항을 설명하는 간결한 문구로, 나중에 히스토리를 확인할 때 각 커밋의 변경 내용을 쉽게 이해할 수 있도록 돕습니다.

git log


git iog와 git status의 차이점

1.용도:
git log: 커밋 히스토리를 조회하여 프로젝트의 변경 이력을 확인하는 데 사용됩니다.
git status: 현재 작업 디렉터리의 파일 상태를 확인하여 어떤 파일이 변경되었고, 어떤 파일이 스테이징되었는지 파악하는 데 사용됩니다.

2. 출력 정보:
git log: 커밋 히스토리(커밋 해시, 작성자, 날짜, 커밋 메시지 등).
git status: 파일 상태 정보(추적되지 않은 파일, 수정된 파일, 스테이징된 파일 등).
