깃 저장소 생성
깃은 소스코드 파일의 모든 변경사항을 저장한다.
레포지토리에 저장함

폴더와 깃 저장소 
파일 시스템은 하드디스크 등에 데이터를 저장하고 관리한다.
폴더는 그룹화가 가능하도록 한다.
깃 저장소에는 별도의 숨겨진 영역이있는데
여기에 버전관리 시스템 vcs에 필요한 파일 변경이력을 기록한다. 저장소는 히스토리를 가진 데이터 베이스와 같다.
차이점은 숨겨진 영역의 여부

초기화 
git init
초기화 작업이 필요
이미 존재하는 폴더에 초기화 명령어로 vcs 관리를 위한 숨겨진 영역을 생성하는 작업
.git 폴더 를 추가하면서 깃 저장소로 변화하는 것이다.
git init 경로명
경로명을 입력하지 않으면 현재 폴더에서 초기화된다.
git init .을 이용할 수도 있다.
이제 일반 폴더에서 깃 저장소로 변화하였다.
숨김항목을 볼 수 있게 설정을 바꾸면 확인 가능하다.

깃 배쉬에서
ls : 파일 목록 출력
초기화된 폴더에서는 아무것도 뜨지 않는다.
ls -a: 폴더안의 숨겨진 폴더를 함께 출력하라
./ ../ .git/

보통 폴더 앞에 .이 들어이우면 숨겨진 폴더를 의미한다.
.git 안에 뼈대파일들이 들어있고 이는 초기화시 생성

여기서 모든 변경사항들이 기록되는 것이다.
컴퓨터에서 깃 저장소를 통째로 복사하고자 하면 숨겨진 .git폴더까지 한번에 복사해야한다.
로컬 컴퓨터에서 .git 폴더를 삭제하거나 함께 복제하지 않으면 변경 이력이 사라지는거야


워킹 디렉토리 = 워킹 트리
깃은 vcs의 특성으로인해 저장공간을 논리적으로 분리함
깃은 저장공간을 나누는데
1. 워킹 디렉토리
2. 스테이지
3. 레퍼지토리(커밋 된 이후)

워킹 디렉토리
파일의 트랙드, 언트랙드 상태
추적시스템이 vcs의 특징

add 명령어를 통한 추적상태 : 관리할 파일 목록에 등록된 상태
스테이지에 올라온 상태
별도의 명령어를 통해 복제해온 파일을 관리해줘야한다.

깃은 명령어로 요청받은 사항들만 처리한다. -> 시스템 과부하를 줄이기 위해서

스테이지
임시로 저장하는 공간을 의미
commit 직전의 상태, 추적 상태
파일의 콘텐츠를 직접 가지고있지는 않다.
단지 그 파일의 정보만 저장이 되어있는 것이다.
파일들의 추적상태를 관리하는데 깃의 변화이력을 커밋하려면 최종적으로 스테이지 상태여야한다.
파일들의 스테이지 상태는 git status 명령어를 통해 확인한다.
git ls-files --stage 명령어도 이용할 수 있다.

레퍼지토리
실제 저장 영역 
그런데 여기도 변경사항만을 기록하지 온정한 내용을 기록하지는 않은다.

*버전관리에서 제외하고싶은 내용이 있다면 .gitignore 파일에 등록하면 된다.

파일의 수정상태
코드 변경 = 수정
수정되면 워킹 디렉토리 파일과 스테이지에 올라간 파일이 달라진다.
status로 확인해보면 나올거야 add를 마쳐야 깔끔해진다.

수정 상태
깃이 실제로 기록한 파일을 의미하고 사실상 버전을 의미한다.
깃은 추적상태의 파일만 수정여부를 관리할 수 있기 때문에 수정을 마치고 추적상태로 올려줘야한다.

한번 스테이지에 올라갔다가 수정으로 인해 언스테이지된 파일은 추적 상태를 유지한다. 
추적은 되나 스테이지에 올라가지 않을 수 있는 것이다.
add 한번도 안했다 : untracked + unstage
add 했다: tracked + stage
add 했다가 수정했다 : tracked + unstage

비 수정상태
추적은 되나 스테이지에서 한번도 수정하지 않은 원본상태를 의미한다.
그럼 그냥 스테이징인거네 바로 커밋하면되는
등록명령을 실행 > 자동으로 tracked 

파일의 상태확인

status로 확인 상세 정보 확인가능
변경된 상태등을 확인할 수 있음


깃 저장소 복제
외부 저장소를 복제해와서 로컬에서 작업할 수 있다.
외부에 만들어둔 프로젝트를 가져와서 쓰고 싶다! -> 복제를 통해 깃 내부에 로컬 저장소를 생성한다.

다운로드와 복제
다운로드는 최종본만을 가져온다. 깃의 변경이력은 가져오지 못한다.
.git의 그 숨은 파일들은 가져오지 못한다.

복제를하면 이 변경이력도 모두 가져올 수 있다.
변화 과정을 모두 파악할 수 있어서 좋다. 원본이 존재하기 때문에 코드변경도 자유롭다.

명령어
git clone 원격 저장소 url 이름
(생략하면 원격저장소와 같은 이름의 폴더가 생성된다.)

